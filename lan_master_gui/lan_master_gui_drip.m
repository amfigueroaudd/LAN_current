function lan_master_gui_drip(LAN_var, mainfig, parent_)

LAN = LAN_var;

if nargin < 2
    mainfig = figure;
end
figure(mainfig);

cfg_control(1) = uicontrol('style', 'text', 'units', 'norm',...
    'position', [.04 .92 .6 .05], 'string', 'channel(s) : ',...
    'horizontalalignment', 'right');
cfg_control(2) = uicontrol('style', 'edit', 'units', 'norm',...
    'position', [.65 .92 .3 .05], 'string', ['1:' mat2str(LAN.nbchan)]);
cfg_control(3) = uicontrol('style', 'text', 'units', 'norm',...
    'position', [.04 .86 .6 .05], 'string', 'frequency range : ',...
    'horizontalalignment', 'right');
cfg_control(4) = uicontrol('style', 'edit', 'units', 'norm',...
    'position', [.65 .86 .3 .05], 'string', '80 180');
cfg_control(5) = uicontrol('style', 'text', 'units', 'norm',...
    'position', [.04 .80 .6 .05], 'string', 'minimum duration (ms) : ',...
    'horizontalalignment', 'right');
cfg_control(6) = uicontrol('style', 'edit', 'units', 'norm',...
    'position', [.65 .80 .3 .05], 'string', '20');
cfg_control(7) = uicontrol('style', 'text', 'units', 'norm',...
    'position', [.04 .74 .6 .05], 'string', 'power threshold (s.d.): ',...
    'horizontalalignment', 'right');
cfg_control(8) = uicontrol('style', 'edit', 'units', 'norm',...
    'position', [.65 .74 .3 .05], 'string', '1 3.5');
cfg_control(9) = uicontrol('style', 'text', 'units', 'norm',...
    'position', [.04 .68 .6 .05], 'string', 'method : ',...
    'horizontalalignment', 'right');
cfg_control(10) = uicontrol('style', 'popup', 'units', 'norm',...
    'position', [.65 .68 .3 .05], 'string', 'logothetis|hilbert');
cfg_control(11) = uicontrol('style', 'text', 'units', 'norm',...
    'position', [.04 .62 .6 .05], 'string', 'TWF : ',...
    'horizontalalignment', 'right');
cfg_control(12) = uicontrol('style', 'popup', 'units', 'norm', ...
    'position', [.65 .62 .3 .05], 'string', 'hann|hamming');
cfg_control(13) = uicontrol('style', 'text', 'units', 'norm',...
    'position', [.04 .56 .6 .05], 'string', 'lowpass filter cutoff (Hz) : ',...
    'horizontalalignment', 'right');
cfg_control(14) = uicontrol('style', 'edit', 'units', 'norm',...
    'position', [.65 .56 .3 .05], 'string', '20');
cfg_control(15) = uicontrol('style', 'text', 'units', 'norm',...
    'position', [.04 .50 .6 .05], 'string', 'freq normalization (whitening) : ',...
    'horizontalalignment', 'right');
cfg_control(16) = uicontrol('style', 'edit', 'units', 'norm',...
    'position', [.65 .50 .3 .05],'string', '0');
cfg_control(17) = uicontrol('style', 'pushbutton', 'units', 'norm',...
    'position', [.66 .05 .3 .06], 'string', 'Start',...
    'callback', {@cb_done, mainfig}, 'tag', 'done');
cfg_control(18) = uicontrol('style', 'pushbutton', 'units', 'norm',...
    'position', [.35 .05 .3 .06], 'string', 'Help',...
    'callback', {@cb_done, mainfig}, 'tag', 'help');
cfg_control(19) = uicontrol('style', 'pushbutton', 'units', 'norm',...
    'position', [.04 .05 .3 .06], 'string', 'Cancel',...
    'callback', {@cb_done, mainfig}, 'tag', 'cancel');

for a = 1:numel(cfg_control)
    set(cfg_control(a), 'parent', parent_);
end

    function cb_done(hObj, event, mainfig)
        tag = get(hObj, 'tag');
        if strcmp(tag, 'done')
            lan_master_gui_busyprompt(true, mainfig);
            str = get(cfg_control(2), 'string');
            cfg.chan = eval(['[' str ']']);
            str = get(cfg_control(4), 'string');
            cfg.freq = eval(['[' str ']']);
            str = get(cfg_control(6), 'string');
            cfg.mindur = eval(['[' str ']']);
            str = get(cfg_control(8), 'string');
            cfg.thr = eval(['[' str ']']);
            str = get(cfg_control(10), 'string');
            cfg.method = strtrim(str(get(cfg_control(10), 'value'),:));
            str = get(cfg_control(12), 'string');
            cfg.twin = strtrim(str(get(cfg_control(12), 'value'),:));
            str = get(cfg_control(14), 'string');
            cfg.lowcut = eval(['[' str ']']);
            str = get(cfg_control(16), 'string');
            cfg.norbin = eval(['[' str ']']);
            cfg.ifcspec = true;
            
            disp('Detecting...');
            RT = lan_detect_logothetis(LAN, cfg);
            assignin('base', 'temp', RT);
            evalin('base', 'LAN.RT = temp; clear temp;');
            
            lan_master_gui_busyprompt(false, mainfig);
            close(mainfig);
            msgbox('Detection is complete. Restart LAN master GUI to include the new results',...
                'Notification', 'help');
        elseif strcmp(tag, 'help')
            web('https://bitbucket.org/marcelostockle/lan-toolbox/wiki/SWR_detection', '-browser');
        else
            delete(cfg_control);
        end
        
    end
end
